{"version":3,"sources":["reducers/index.ts","utils.ts","TodoContext.tsx","components/TodoInput/index.tsx","components/MainTitle/index.tsx","components/TodosListView/EditPanel.tsx","components/TodosListView/index.tsx","pages/Home.tsx","App.tsx","index.tsx"],"names":["INITIAL_STATE","todos","trigger","reducer","state","action","type","payload","base","fetch_todos","a","data","axios","get","then","response","catch","e","console","log","todo","post","update_todo","put","_id","delete","TodoContext","createContext","TodoContextProvider","children","useReducer","dispatch","asyncDispatch","actions","newState","Provider","value","useStyles","makeStyles","root","color","TodoInput","classes","useState","task","setTask","useContext","className","Grid","container","spacing","alignItems","item","TextField","label","variant","onChange","target","IconButton","aria-label","component","onClick","event","insert_todo","when","Date","toString","done","by","SendRounded","style","fontSize","MainTitle","margin","fontWeight","Transition","React","forwardRef","props","ref","Slide","direction","EditPanel","taskName","setTaskName","useEffect","Dialog","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogActions","Button","closePanel","theme","createStyles","width","maxWidth","height","backgroundColor","palette","background","paper","flexWrap","overflowY","WebkitOverflowScrolling","whenDone","textDecoration","textDecorationColor","textDecorationThickness","TodosListView","currentTask","setCurrentTask","toggleEditPanel","setToggleEditPanel","handleCheckingTask","handleEdit","handleDelete","delete_todo","List","map","labelId","ListItem","role","undefined","dense","button","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","inputProps","ListItemText","primary","ListItemSecondaryAction","Edit","Delete","fontFamily","position","padding","top","left","display","justifyContent","flexDirection","borderRadius","divider","Home","isLoading","setIsLoading","CircularProgress","Divider","orientation","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a38b8828.chunk.js","sourcesContent":["import { State, Actions } from \"../TodoContext\";\n\nexport const INITIAL_STATE: State = {\n  todos: [],\n  trigger: true,\n};\n\nexport const reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case \"POPULATE\":\n      return {\n        ...state,\n        todos: action.payload,\n        trigger: false,\n      };\n\n    case \"TRIGGER\":\n      return { ...state, trigger: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import axios from \"axios\";\n\nimport { Todo } from \"./TodoContext\";\n\n// const base = \"http://backend:2500\";\nconst base = \"https://full-stack-todo-bknd.herokuapp.com\";\n\nexport async function fetch_todos() {\n  let data: Array<Todo> = [];\n\n  await axios\n    .get(base + \"/api/todo\")\n    .then((response) => {\n      data = response.data.todos;\n    })\n    .catch((e) => console.log(e));\n\n  return data;\n}\n\nexport async function insert_todo(todo: Todo) {\n  await axios.post(base + \"/api/todo\", todo).catch((e) => console.log(e));\n}\n\nexport async function update_todo(todo: Todo) {\n  await axios\n    .put(base + \"/api/todo/\" + todo._id, todo)\n    .catch((e) => console.log(e));\n}\n\nexport async function delete_todo(todo: Todo) {\n  await axios\n    .delete(base + \"/api/todo/\" + todo._id)\n    .catch((e) => console.log(e));\n}\n","import React, { createContext, useReducer } from \"react\";\n\nimport { reducer, INITIAL_STATE } from \"./reducers\";\nimport { fetch_todos } from \"./utils\";\n\ntype ContextProps = {\n  state: State;\n  dispatch: (actions: Actions) => void;\n};\n\nexport interface Todo {\n  _id?: string;\n  task: string;\n  when: string;\n  done: boolean;\n  by: string;\n}\n\nexport interface State {\n  todos?: Array<Todo>;\n  trigger?: boolean;\n}\n\nexport interface Actions {\n  type: string;\n  payload?: any;\n}\n\nexport const TodoContext = createContext<Partial<ContextProps>>({});\n\nconst TodoContextProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\n\n  const asyncDispatch = async (actions: Actions) => {\n    switch (actions.type) {\n      case \"REPOPULATE\":\n        const newState = await fetch_todos();\n        return newState;\n\n      default:\n        return dispatch(actions);\n    }\n  };\n\n  return (\n    <TodoContext.Provider value={{ state, dispatch: asyncDispatch }}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n\nexport default TodoContextProvider;\n","import React, { useContext, useState } from \"react\";\nimport { TextField, Grid, IconButton } from \"@material-ui/core\";\nimport { SendRounded } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Todo, TodoContext } from \"../../TodoContext\";\nimport { insert_todo } from \"../../utils\";\n\nconst useStyles = makeStyles({\n  root: {\n    color: \"White\",\n  },\n});\n\nconst TodoInput: React.FC<{}> = () => {\n  const classes = useStyles();\n  const [task, setTask] = useState(\"\");\n  const { dispatch } = useContext(TodoContext);\n\n  const handleClick = (\n    event: React.MouseEvent<HTMLSpanElement, MouseEvent>\n  ) => {\n    const newTodo: Todo = {\n      when: (+new Date()).toString(),\n      task: task,\n      done: false,\n      by: \"Igor Souza\",\n    };\n\n    insert_todo(newTodo).then(() => {\n      if (dispatch) dispatch({ type: \"TRIGGER\", payload: true });\n    });\n\n    setTask(\"\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1} alignItems=\"center\">\n        <Grid item>\n          <TextField\n            color=\"primary\"\n            label=\"Todo\"\n            variant=\"outlined\"\n            value={task}\n            onChange={(e) => setTask(e.target.value)}\n          />\n        </Grid>\n        <Grid item>\n          <IconButton\n            color=\"primary\"\n            aria-label=\"registre todo\"\n            component=\"span\"\n            onClick={handleClick}\n          >\n            <SendRounded style={{ fontSize: \"32px\" }} />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default TodoInput;\n","import React from \"react\";\n\nconst MainTitle: React.FC<{}> = () => {\n  return (\n    <p style={{ fontSize: \"3em\", margin: \"20px 0px\" }}>\n      <span style={{ fontWeight: \"bold\" }}>Todo</span>List\n    </p>\n  );\n};\n\nexport default MainTitle;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Slide,\n  TextField,\n} from \"@material-ui/core\";\nimport { TransitionProps } from \"@material-ui/core/transitions\";\n\nimport { Todo, TodoContext } from \"../../TodoContext\";\nimport { update_todo } from \"../../utils\";\n\ninterface IEditPanel {\n  task: Todo;\n  open: boolean;\n  onClose: () => void;\n}\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst EditPanel: React.FC<IEditPanel> = (props: IEditPanel) => {\n  const [taskName, setTaskName] = useState(props.task.task);\n  const { dispatch } = useContext(TodoContext);\n\n  useEffect(() => {\n    setTaskName(props.task.task);\n  }, [props.task]);\n\n  const handleSave = (todo: Todo, closePanel: () => void) => {\n    todo.task = taskName;\n\n    update_todo(todo).then(() => {\n      if (dispatch) dispatch({ type: \"TRIGGER\", payload: true });\n    });\n\n    closePanel();\n  };\n\n  const handleTaskNameChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setTaskName(e.target.value);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={props.onClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          {\"Edit this Task\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            label=\"Task Name\"\n            value={taskName}\n            onChange={handleTaskNameChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              handleSave(props.task, props.onClose);\n            }}\n            color=\"primary\"\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default EditPanel;\n","import React, { useState, useContext } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  IconButton,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { Delete, Edit } from \"@material-ui/icons\";\n\nimport EditPanel from \"./EditPanel\";\nimport { TodoContext, Todo } from \"../../TodoContext\";\nimport { update_todo, delete_todo } from \"../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      height: 250,\n      backgroundColor: theme.palette.background.paper,\n      flexWrap: \"wrap\",\n      overflowY: \"scroll\",\n      WebkitOverflowScrolling: \"touch\",\n    },\n    whenDone: {\n      textDecoration: \"line-through\",\n      textDecorationColor: \"#8B8B8B\",\n      textDecorationThickness: \"2px\",\n      color: \"#8B8B8B\",\n    },\n  })\n);\n\nconst TodosListView: React.FC<{}> = () => {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(TodoContext);\n\n  const [currentTask, setCurrentTask] = useState<Todo>({\n    _id: \"\",\n    task: \"\",\n    when: \"\",\n    done: false,\n    by: \"\",\n  });\n  const [toggleEditPanel, setToggleEditPanel] = useState(false);\n\n  const handleCheckingTask = (value: Todo) => () => {\n    value.done = !value.done;\n\n    update_todo(value).then(() => {\n      if (dispatch) dispatch({ type: \"TRIGGER\", payload: true });\n    });\n  };\n\n  const handleEdit = (value: Todo) => () => {\n    setCurrentTask(value);\n    setToggleEditPanel(true);\n  };\n\n  const handleDelete = (value: Todo) => () => {\n    delete_todo(value).then(() => {\n      if (dispatch) dispatch({ type: \"TRIGGER\", payload: true });\n    });\n  };\n\n  return (\n    <List className={classes.root}>\n      {state && state.todos ? (\n        state.todos.map((value) => {\n          const labelId = `checkbox-list-label-${value._id}`;\n\n          return (\n            <div key={value._id}>\n              {/*Edit Panel Opens when Edit Button is clicked*/}\n              <EditPanel\n                task={currentTask}\n                open={toggleEditPanel}\n                onClose={() => {\n                  setToggleEditPanel(false);\n                }}\n              />\n\n              {/* Actual List Items */}\n              <ListItem\n                key={value._id}\n                role={undefined}\n                dense\n                button\n                onClick={handleCheckingTask(value)}\n              >\n                <ListItemIcon>\n                  <Checkbox\n                    edge=\"start\"\n                    checked={value.done}\n                    tabIndex={-1}\n                    disableRipple\n                    inputProps={{ \"aria-labelledby\": labelId }}\n                  />\n                </ListItemIcon>\n                <ListItemText\n                  className={value.done ? classes.whenDone : undefined}\n                  id={labelId}\n                  primary={value.task}\n                />\n                <ListItemSecondaryAction>\n                  <IconButton\n                    onClick={handleEdit(value)}\n                    edge=\"end\"\n                    aria-label=\"edit-task\"\n                  >\n                    <Edit />\n                  </IconButton>\n                  <IconButton\n                    onClick={handleDelete(value)}\n                    edge=\"end\"\n                    aria-label=\"delete-task\"\n                  >\n                    <Delete />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            </div>\n          );\n        })\n      ) : (\n        <></>\n      )}\n    </List>\n  );\n};\n\nexport default TodosListView;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { CircularProgress, Divider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport TodoInput from \"../components/TodoInput\";\nimport MainTitle from \"../components/MainTitle\";\nimport TodosListView from \"../components/TodosListView\";\nimport { TodoContext } from \"../TodoContext\";\nimport { fetch_todos } from \"../utils\";\n\nconst useStyles = makeStyles({\n  root: {\n    background: \"linear-gradient(45deg, #49008E 30%, #26004A 90%)\",\n    fontFamily: \"Fira Code\",\n    position: \"fixed\",\n    padding: 0,\n    margin: 0,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    margin: \"30px 0px\",\n    height: \"600px\",\n    width: \"400px\",\n    background: \"white\",\n    borderRadius: 16,\n  },\n  divider: {\n    width: 350,\n    margin: 20,\n  },\n});\n\nconst Home: React.FC<{}> = () => {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(TodoContext);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (state?.trigger) {\n      setIsLoading(true);\n\n      fetch_todos().then((todos) => {\n        if (dispatch) dispatch({ type: \"POPULATE\", payload: todos });\n      });\n\n      setIsLoading(false);\n    }\n  }, [state?.trigger, dispatch]);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.container}>\n        {isLoading ? (\n          <CircularProgress />\n        ) : (\n          <>\n            <MainTitle />\n            <TodoInput />\n            <Divider\n              className={classes.divider}\n              variant=\"middle\"\n              orientation=\"horizontal\"\n            />\n            <TodosListView />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nimport TodoContextProvider from \"./TodoContext\";\nimport Home from \"./pages/Home\";\n\nconst App: React.FC<{}> = () => (\n  <TodoContextProvider>\n    <Home />;\n  </TodoContextProvider>\n);\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}